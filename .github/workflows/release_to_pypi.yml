name: Build and Publish to PyPI

on:
  push:
    branches:
      - main

jobs:
  build_and_publish:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry
        pip install twine

    - name: Get local version
      id: get_local_version
      run: echo "::set-output name=version::$(awk -F ' = ' '$1 == "version" {gsub(/[ "\x27]+/, "", $2); print $2}' pyproject.toml)"

    - name: Get latest version from PyPI
      id: get_latest_version
      run: echo "::set-output name=version::$(curl -s https://pypi.org/pypi/u3606b_py/json | jq -r .info.version)"

    - name: Check version difference
      id: check_version
      run: |
        local_version=${{ steps.get_local_version.outputs.version }}
        latest_version=${{ steps.get_latest_version.outputs.version }}
        if [ "$local_version" != "$latest_version" ]; then
          echo "Version changed, continue with build"
          echo "::set-output name=version_changed::true"
        else
          echo "No version change, skip build and publish"
          echo "::set-output name=version_changed::false"
        fi

    - name: Build package
      run: python -m build
      if: steps.check_version.outputs.version_changed == 'true'

    - name: Publish to PyPI
      run: twine upload dist/*
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      if: steps.check_version.outputs.version_changed == 'true'
